# Changed to 0.8/0.2 train-test split
2025-06-12 16:00:00,179 - Best Parameters (Optuna): {'max_depth': 5, 'learning_rate': 0.2644212911092845, 'n_estimators': 84, 'subsample': 0.7049638739891072, 'colsample_bytree': 0.6102131843312785, 'gamma': 1.2352572425509498, 'reg_alpha': 0.836938833703733, 'reg_lambda': 0.26022108105834946}
2025-06-12 16:00:00,179 - Best Cross-Validation F1 Score (Optuna): 0.5371
2025-06-12 16:00:00,202 - Model: XGBoost
2025-06-12 16:00:00,202 - F1 Score: 0.5600
2025-06-12 16:00:00,202 - Average Precision: 0.6189
2025-06-12 16:00:00,202 - Baseline Precision: 0.0876
2025-06-12 16:00:00,202 - ROC AUC: 0.8891
2025-06-12 16:00:33,227 - Best Parameters (Optuna): {'C': 21.368473660050626, 'penalty': 'l1'}
2025-06-12 16:00:33,227 - Best Cross-Validation F1 Score (Optuna): 0.4039
2025-06-12 16:00:33,235 - Model: Logistic Regression
2025-06-12 16:00:33,235 - F1 Score: 0.5385
2025-06-12 16:00:33,236 - Average Precision: 0.5802
2025-06-12 16:00:33,236 - Baseline Precision: 0.0876
2025-06-12 16:00:33,236 - ROC AUC: 0.8545
2025-06-12 16:01:14,974 - Best Parameters (Optuna): {'n_estimators': 23, 'max_depth': 15, 'min_samples_split': 16, 'min_samples_leaf': 2, 'max_features': None}
2025-06-12 16:01:14,974 - Best Cross-Validation F1 Score (Optuna): 0.5131
2025-06-12 16:01:15,034 - Model: Random Forest
2025-06-12 16:01:15,034 - F1 Score: 0.5926
2025-06-12 16:01:15,034 - Average Precision: 0.5990
2025-06-12 16:01:15,034 - Baseline Precision: 0.0876
2025-06-12 16:01:15,034 - ROC AUC: 0.8600

# Changed to 0.9/0.1 train-test split
2025-06-12 16:05:51,597 - Best Parameters (Optuna): {'max_depth': 9, 'learning_rate': 0.11186073187467067, 'n_estimators': 48, 'subsample': 0.573307079164074, 'scale_pos_weight': 6.79199605792656, 'colsample_bytree': 0.7036855349764104, 'gamma': 0.3696844742506049, 'reg_alpha': 0.21850368730579786, 'reg_lambda': 0.24094293083371296}
2025-06-12 16:05:51,597 - Best Cross-Validation F1 Score (Optuna): 0.5623
2025-06-12 16:05:51,612 - Model: XGBoost
2025-06-12 16:05:51,612 - F1 Score: 0.6154
2025-06-12 16:05:51,612 - Average Precision: 0.6572
2025-06-12 16:05:51,612 - Baseline Precision: 0.0825
2025-06-12 16:05:51,612 - ROC AUC: 0.9357
2025-06-12 16:06:05,803 - Best Parameters (Optuna): {'C': 22.247314686723172, 'penalty': 'l2'}
2025-06-12 16:06:05,803 - Best Cross-Validation F1 Score (Optuna): 0.4135
2025-06-12 16:06:05,820 - Model: Logistic Regression
2025-06-12 16:06:05,821 - F1 Score: 0.6154
2025-06-12 16:06:05,821 - Average Precision: 0.6849
2025-06-12 16:06:05,821 - Baseline Precision: 0.0825
2025-06-12 16:06:05,821 - ROC AUC: 0.9087
2025-06-12 16:06:47,151 - Best Parameters (Optuna): {'n_estimators': 17, 'max_depth': 15, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'log2'}
2025-06-12 16:06:47,152 - Best Cross-Validation F1 Score (Optuna): 0.5172
2025-06-12 16:06:47,199 - Model: Random Forest
2025-06-12 16:06:47,199 - F1 Score: 0.6452
2025-06-12 16:06:47,199 - Average Precision: 0.6447
2025-06-12 16:06:47,199 - Baseline Precision: 0.0825
2025-06-12 16:06:47,199 - ROC AUC: 0.9277

# Changed to 5x5 dataset
2025-06-12 16:09:39,859 - Best Parameters (Optuna): {'max_depth': 6, 'learning_rate': 0.3287972364485231, 'n_estimators': 91, 'subsample': 0.6776723288600726, 'scale_pos_weight': 5.523741086651496, 'colsample_bytree': 0.6858617076454239, 'gamma': 0.3804538854911426, 'reg_alpha': 0.42237180835825705, 'reg_lambda': 0.8121148908543029}
2025-06-12 16:09:39,860 - Best Cross-Validation F1 Score (Optuna): 0.5946
2025-06-12 16:09:39,874 - Model: XGBoost
2025-06-12 16:09:39,874 - F1 Score: 0.6154
2025-06-12 16:09:39,874 - Average Precision: 0.7002
2025-06-12 16:09:39,874 - Baseline Precision: 0.0825
2025-06-12 16:09:39,874 - ROC AUC: 0.9505
2025-06-12 16:09:53,818 - Best Parameters (Optuna): {'C': 0.43382044788839447, 'penalty': 'l2'}
2025-06-12 16:09:53,818 - Best Cross-Validation F1 Score (Optuna): 0.4181
2025-06-12 16:09:53,834 - Model: Logistic Regression
2025-06-12 16:09:53,835 - F1 Score: 0.5385
2025-06-12 16:09:53,835 - Average Precision: 0.7138
2025-06-12 16:09:53,835 - Baseline Precision: 0.0825
2025-06-12 16:09:53,835 - ROC AUC: 0.9147
2025-06-12 16:10:57,035 - Best Parameters (Optuna): {'n_estimators': 75, 'max_depth': 14, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': 4}
2025-06-12 16:10:57,035 - Best Cross-Validation F1 Score (Optuna): 0.5259
2025-06-12 16:10:57,105 - Model: Random Forest
2025-06-12 16:10:57,105 - F1 Score: 0.6429
2025-06-12 16:10:57,106 - Average Precision: 0.6916
2025-06-12 16:10:57,106 - Baseline Precision: 0.0825
2025-06-12 16:10:57,106 - ROC AUC: 0.9245

# Changed to 10x10 dataset
2025-06-13 14:32:36,697 - Best params (Optuna): {'C': 7.346586108675128}
2025-06-13 14:32:36,697 - Best CV F1 (Optuna): 0.3292
2025-06-13 14:32:36,722 - Logistic Regression (Single) | F1: 0.4675  AP: 0.5791  ROC‑AUC: 0.8209
2025-06-13 14:33:28,484 - Best params (Optuna): {'C': 0.08284442077113635}
2025-06-13 14:33:28,484 - Best CV F1 (Optuna): 0.4580
2025-06-13 14:33:28,585 - Logistic Regression | F1: 0.5479  AP: 0.6276  ROC‑AUC: 0.8644
2025-06-13 14:34:06,726 - Best params (Optuna): {'n_estimators': 103, 'max_depth': 15, 'min_samples_split': 8, 'min_samples_leaf': 1, 'max_features': 4}
2025-06-13 14:34:06,726 - Best CV F1 (Optuna): 0.5385
2025-06-13 14:34:07,345 - Random Forest | F1: 0.5854  AP: 0.7408  ROC‑AUC: 0.9318
2025-06-13 14:34:56,972 - Best params (Optuna): {'max_depth': 6, 'learning_rate': 0.11483457172157868, 'n_estimators': 127, 'subsample': 0.9250144693067383, 'colsample_bytree': 0.7712110124279898, 'scale_pos_weight': 8.893156628847267, 'reg_alpha': 0.4254910148662459, 'reg_lambda': 0.5370674064383636}
2025-06-13 14:34:56,972 - Best CV F1 (Optuna): 0.6237
2025-06-13 14:35:44,234 - XGBoost | F1: 0.6667  AP: 0.7695  ROC‑AUC: 0.9545

# Changed to 15x15 dataset

2025-06-13 14:37:29,984 - Best params (Optuna): {'C': 0.12178334260996798}
2025-06-13 14:37:29,984 - Best CV F1 (Optuna): 0.3395
2025-06-13 14:37:29,998 - Logistic Regression (Single) | F1: 0.4533  AP: 0.5891  ROC‑AUC: 0.8174
2025-06-13 14:37:34,809 - Best params (Optuna): {'C': 10.739865276970077}
2025-06-13 14:37:34,809 - Best CV F1 (Optuna): 0.4714
2025-06-13 14:37:34,854 - Logistic Regression | F1: 0.5278  AP: 0.6477  ROC‑AUC: 0.8677
2025-06-13 14:38:11,980 - Best params (Optuna): {'n_estimators': 83, 'max_depth': 13, 'min_samples_split': 3, 'min_samples_leaf': 1, 'max_features': 3}
2025-06-13 14:38:11,980 - Best CV F1 (Optuna): 0.5342
2025-06-13 14:38:12,364 - Random Forest | F1: 0.5641  AP: 0.7668  ROC‑AUC: 0.9308
2025-06-13 14:39:41,421 - Best params (Optuna): {'max_depth': 7, 'learning_rate': 0.048182027060882766, 'n_estimators': 127, 'subsample': 0.8133908847589875, 'colsample_bytree': 0.83614469815802, 'scale_pos_weight': 14.895774039761672, 'reg_alpha': 0.249571570502354, 'reg_lambda': 1.5842584361146428}
2025-06-13 14:39:41,421 - Best CV F1 (Optuna): 0.6530
2025-06-13 14:40:29,304 - XGBoost | F1: 0.6538  AP: 0.7602  ROC‑AUC: 0.9424

# Trying the 5x5 dataset again

2025-06-13 14:41:44,392 - Best params (Optuna): {'C': 0.2363483738761018}
2025-06-13 14:41:44,393 - Best CV F1 (Optuna): 0.2688
2025-06-13 14:41:44,406 - Logistic Regression (Single) | F1: 0.4416  AP: 0.5376  ROC‑AUC: 0.8068
2025-06-13 14:41:50,831 - Best params (Optuna): {'C': 35.32721674092029}
2025-06-13 14:41:50,831 - Best CV F1 (Optuna): 0.4625
2025-06-13 14:41:50,876 - Logistic Regression | F1: 0.5063  AP: 0.5901  ROC‑AUC: 0.8581
2025-06-13 14:42:26,725 - Best params (Optuna): {'n_estimators': 83, 'max_depth': 15, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 4}
2025-06-13 14:42:26,725 - Best CV F1 (Optuna): 0.5444
2025-06-13 14:42:27,227 - Random Forest | F1: 0.5263  AP: 0.6843  ROC‑AUC: 0.9011
2025-06-13 14:43:17,639 - Best params (Optuna): {'max_depth': 6, 'learning_rate': 0.11505944551636764, 'n_estimators': 105, 'subsample': 0.6073230233171598, 'colsample_bytree': 0.7471713215640623, 'scale_pos_weight': 13.482755893106619, 'reg_alpha': 0.21677297293888778, 'reg_lambda': 1.7926610946168426}
2025-06-13 14:43:17,639 - Best CV F1 (Optuna): 0.6068
2025-06-13 14:44:03,512 - XGBoost | F1: 0.6522  AP: 0.7041  ROC‑AUC: 0.9182

# Trying the single grid point model again

2025-06-13 14:46:19,237 - Best params (Optuna): {'C': 18.8540760487868}
2025-06-13 14:46:19,237 - Best CV F1 (Optuna): 0.2688
2025-06-13 14:46:19,257 - Logistic Regression (Single) | F1: 0.4416  AP: 0.5376  ROC‑AUC: 0.8068
2025-06-13 14:46:38,489 - Best params (Optuna): {'C': 0.3874085986949562}
2025-06-13 14:46:38,489 - Best CV F1 (Optuna): 0.4424
2025-06-13 14:46:38,545 - Logistic Regression | F1: 0.5000  AP: 0.5919  ROC‑AUC: 0.8541
2025-06-13 14:47:12,819 - Best params (Optuna): {'n_estimators': 111, 'max_depth': 13, 'min_samples_split': 7, 'min_samples_leaf': 1, 'max_features': 4}
2025-06-13 14:47:12,819 - Best CV F1 (Optuna): 0.5221
2025-06-13 14:47:13,779 - Random Forest | F1: 0.5000  AP: 0.6829  ROC‑AUC: 0.9248
2025-06-13 14:48:13,102 - Best params (Optuna): {'max_depth': 8, 'learning_rate': 0.034777648417204515, 'n_estimators': 131, 'subsample': 0.6020574649158306, 'colsample_bytree': 0.9504862476697424, 'scale_pos_weight': 6.569229313308988, 'reg_alpha': 0.43778875484764945, 'reg_lambda': 0.9279911802847476}
2025-06-13 14:48:13,102 - Best CV F1 (Optuna): 0.5725
2025-06-13 14:48:58,605 - XGBoost | F1: 0.5581  AP: 0.6576  ROC‑AUC: 0.9102

# Testing the 10x10 with a 0.8/0.2 split again
2025-06-13 14:53:04,103 - Best params (Optuna): {'C': 0.02117638810705818}
2025-06-13 14:53:04,103 - Best CV F1 (Optuna): 0.3160
2025-06-13 14:53:04,129 - Logistic Regression (Single) | F1: 0.4354  AP: 0.5494  ROC‑AUC: 0.8336
2025-06-13 14:53:14,598 - Best params (Optuna): {'C': 12.140571940630851}
2025-06-13 14:53:14,598 - Best CV F1 (Optuna): 0.4597
2025-06-13 14:53:14,640 - Logistic Regression | F1: 0.4832  AP: 0.6153  ROC‑AUC: 0.8776
2025-06-13 14:53:49,136 - Best params (Optuna): {'n_estimators': 69, 'max_depth': 14, 'min_samples_split': 7, 'min_samples_leaf': 3, 'max_features': 4}
2025-06-13 14:53:49,136 - Best CV F1 (Optuna): 0.5250
2025-06-13 14:53:49,645 - Random Forest | F1: 0.5797  AP: 0.6770  ROC‑AUC: 0.9260
2025-06-13 14:54:40,550 - Best params (Optuna): {'max_depth': 5, 'learning_rate': 0.17593992312238177, 'n_estimators': 112, 'subsample': 0.7590703681092608, 'colsample_bytree': 0.8813798370314776, 'scale_pos_weight': 10.341714531453064, 'reg_alpha': 0.47488114524778935, 'reg_lambda': 1.0186727724090914}
2025-06-13 14:54:40,550 - Best CV F1 (Optuna): 0.6220
2025-06-13 14:54:42,553 - XGBoost | F1: 0.5526  AP: 0.7018  ROC‑AUC: 0.9298

# Testing the 10x10 with a 0.85/0.15 split again

2025-06-13 14:56:41,535 - Best params (Optuna): {'C': 0.15610336337150937}
2025-06-13 14:56:41,535 - Best CV F1 (Optuna): 0.3179
2025-06-13 14:56:41,562 - Logistic Regression (Single) | F1: 0.4074  AP: 0.5533  ROC‑AUC: 0.8204
2025-06-13 14:57:27,528 - Best params (Optuna): {'C': 0.7365921325683419}
2025-06-13 14:57:27,529 - Best CV F1 (Optuna): 0.4738
2025-06-13 14:57:27,568 - Logistic Regression | F1: 0.4902  AP: 0.5923  ROC‑AUC: 0.8749
2025-06-13 14:57:59,938 - Best params (Optuna): {'n_estimators': 58, 'max_depth': 9, 'min_samples_split': 8, 'min_samples_leaf': 1, 'max_features': 'log2'}
2025-06-13 14:57:59,938 - Best CV F1 (Optuna): 0.5058
2025-06-13 14:58:00,361 - Random Forest | F1: 0.5965  AP: 0.6639  ROC‑AUC: 0.9210
2025-06-13 14:58:52,466 - Best params (Optuna): {'max_depth': 6, 'learning_rate': 0.17362462270155743, 'n_estimators': 149, 'subsample': 0.6209855295629854, 'colsample_bytree': 0.8486570677297574, 'scale_pos_weight': 14.682532752323006, 'reg_alpha': 0.09486234540955052, 'reg_lambda': 1.5223633002379353}
2025-06-13 14:58:52,466 - Best CV F1 (Optuna): 0.6219
2025-06-13 14:58:57,164 - XGBoost | F1: 0.6182  AP: 0.6621  ROC‑AUC: 0.9342

# Testing the 10x10 with a 0.9/0.1 split again
2025-06-13 15:03:39,290 - Best params (Optuna): {'C': 29.756586869805815}
2025-06-13 15:03:39,290 - Best CV F1 (Optuna): 0.3292
2025-06-13 15:03:39,323 - Logistic Regression (Single) | F1: 0.4675  AP: 0.5791  ROC‑AUC: 0.8209
2025-06-13 15:03:45,781 - Best params (Optuna): {'C': 0.34102057306888256}
2025-06-13 15:03:45,781 - Best CV F1 (Optuna): 0.4579
2025-06-13 15:03:45,845 - Logistic Regression | F1: 0.5556  AP: 0.6325  ROC‑AUC: 0.8669
2025-06-13 15:04:19,125 - Best params (Optuna): {'n_estimators': 85, 'max_depth': 12, 'min_samples_split': 9, 'min_samples_leaf': 4, 'max_features': 4}
2025-06-13 15:04:19,125 - Best CV F1 (Optuna): 0.5141
2025-06-13 15:04:19,718 - Random Forest | F1: 0.6047  AP: 0.7483  ROC‑AUC: 0.9328
2025-06-13 15:05:10,199 - Best params (Optuna): {'max_depth': 7, 'learning_rate': 0.12423212029228554, 'n_estimators': 112, 'subsample': 0.6431897522980754, 'colsample_bytree': 0.768549938469314, 'scale_pos_weight': 12.473610395363417, 'reg_alpha': 0.3993288070189938, 'reg_lambda': 1.3074883873836378}
2025-06-13 15:05:10,200 - Best CV F1 (Optuna): 0.6408
2025-06-13 15:05:17,069 - XGBoost | F1: 0.6512  AP: 0.6967  ROC‑AUC: 0.9273

# Testing the 10x10 with a 0.9/0.1 split again, changed some ranges

2025-06-17 10:07:05,614 - Best params (Optuna): {'C': 83.04775503712577}
2025-06-17 10:07:05,614 - Best CV F1 (Optuna): 0.3292
2025-06-17 10:07:05,636 - Logistic Regression (Single) | F1: 0.4675  AP: 0.5791  ROC‑AUC: 0.8209
2025-06-17 10:07:34,912 - Best params (Optuna): {'C': 0.07520964698124045}
2025-06-17 10:07:34,912 - Best CV F1 (Optuna): 0.4601
2025-06-17 10:07:34,958 - Logistic Regression | F1: 0.5479  AP: 0.6273  ROC‑AUC: 0.8639
2025-06-17 10:08:12,610 - Best params (Optuna): {'n_estimators': 71, 'max_depth': 14, 'min_samples_split': 9, 'min_samples_leaf': 1, 'max_features': 4}
2025-06-17 10:08:12,610 - Best CV F1 (Optuna): 0.5240
2025-06-17 10:08:13,052 - Random Forest | F1: 0.6000  AP: 0.7418  ROC‑AUC: 0.9302
2025-06-17 10:09:34,681 - Best params (Optuna): {'max_depth': 5, 'learning_rate': 0.10021719346814018, 'n_estimators': 118, 'subsample': 0.8946063492498202, 'colsample_bytree': 0.945186420490197, 'scale_pos_weight': 10.374472204795001, 'reg_alpha': 0.23634436732139788, 'reg_lambda': 1.953906441840585}
2025-06-17 10:09:34,681 - Best CV F1 (Optuna): 0.6240
2025-06-17 10:09:43,482 - XGBoost | F1: 0.6522  AP: 0.7454  ROC‑AUC: 0.9452
# Reran again
2025-06-17 10:17:35,219 - Best params (Optuna): {'C': 13.464209739362396}
2025-06-17 10:17:35,220 - Best CV F1 (Optuna): 0.3292
2025-06-17 10:17:35,246 - Logistic Regression (Single) | F1: 0.4675  AP: 0.5791  ROC‑AUC: 0.8209
2025-06-17 10:18:12,372 - Best params (Optuna): {'C': 0.0926636172734828}
2025-06-17 10:18:12,372 - Best CV F1 (Optuna): 0.4580
2025-06-17 10:18:12,434 - Logistic Regression | F1: 0.5479  AP: 0.6276  ROC‑AUC: 0.8644
2025-06-17 10:18:49,549 - Best params (Optuna): {'n_estimators': 87, 'max_depth': 13, 'min_samples_split': 9, 'min_samples_leaf': 1, 'max_features': 'log2'}
2025-06-17 10:18:49,549 - Best CV F1 (Optuna): 0.5253
2025-06-17 10:18:49,931 - Random Forest | F1: 0.5854  AP: 0.7247  ROC‑AUC: 0.9219
2025-06-17 10:20:16,600 - Best params (Optuna): {'max_depth': 10, 'learning_rate': 0.24915092469708103, 'n_estimators': 169, 'subsample': 0.8117777407803292, 'colsample_bytree': 0.9484603624072451, 'scale_pos_weight': 8.51313515591632, 'reg_alpha': 0.4965736291627802, 'reg_lambda': 1.4897287027627204}
2025-06-17 10:20:16,600 - Best CV F1 (Optuna): 0.6262
2025-06-17 10:21:03,595 - XGBoost | F1: 0.6364  AP: 0.7058  ROC‑AUC: 0.9399
2025-06-17 10:37:54,458 - Best params (Optuna): {'C': 24.128083828739996}
2025-06-17 10:37:54,459 - Best CV F1 (Optuna): 0.3292

# Reran again
2025-06-17 10:37:54,476 - Logistic Regression (Single) | F1: 0.4675  AP: 0.5791  ROC‑AUC: 0.8209
2025-06-17 10:38:53,959 - Best params (Optuna): {'C': 0.07639747174543293}
2025-06-17 10:38:53,960 - Best CV F1 (Optuna): 0.4601
2025-06-17 10:38:54,021 - Logistic Regression | F1: 0.5479  AP: 0.6273  ROC‑AUC: 0.8639
2025-06-17 10:39:34,838 - Best params (Optuna): {'n_estimators': 148, 'max_depth': 12, 'min_samples_split': 9, 'min_samples_leaf': 1, 'max_features': 'log2'}
2025-06-17 10:39:34,839 - Best CV F1 (Optuna): 0.5201
2025-06-17 10:39:35,642 - Random Forest | F1: 0.6000  AP: 0.7340  ROC‑AUC: 0.9254
2025-06-17 10:41:01,201 - Best params (Optuna): {'max_depth': 6, 'learning_rate': 0.17698246274341708, 'n_estimators': 133, 'subsample': 0.8982240043734835, 'colsample_bytree': 0.7622474163733398, 'scale_pos_weight': 8.437670447984138, 'reg_alpha': 0.22367893628532487, 'reg_lambda': 1.2374376075659743}
2025-06-17 10:41:01,201 - Best CV F1 (Optuna): 0.6183
2025-06-17 10:41:42,590 - XGBoost | F1: 0.6190  AP: 0.7201  ROC‑AUC: 0.9341

# Reran again
2025-06-17 11:08:29,214 - Best params (Optuna): {'C': 1.7095935664729005}
2025-06-17 11:08:29,214 - Best CV F1 (Optuna): 0.3292
2025-06-17 11:08:29,229 - Logistic Regression (Single) | F1: 0.4675  AP: 0.5791  ROC‑AUC: 0.8209
2025-06-17 11:08:39,073 - Best params (Optuna): {'C': 0.3882453214455381}
2025-06-17 11:08:39,073 - Best CV F1 (Optuna): 0.4579
2025-06-17 11:08:39,395 - Logistic Regression | F1: 0.5556  AP: 0.6325  ROC‑AUC: 0.8669
2025-06-17 11:09:15,909 - Best params (Optuna): {'n_estimators': 80, 'max_depth': 11, 'min_samples_split': 11, 'min_samples_leaf': 2, 'max_features': 'sqrt'}
2025-06-17 11:09:15,909 - Best CV F1 (Optuna): 0.4966
2025-06-17 11:09:16,232 - Random Forest | F1: 0.5909  AP: 0.7602  ROC‑AUC: 0.9240
2025-06-17 11:11:20,744 - Best params (Optuna): {'max_depth': 6, 'learning_rate': 0.19780491359142593, 'n_estimators': 130, 'subsample': 0.904974610791277, 'colsample_bytree': 0.8103789743295078, 'scale_pos_weight': 5.323120657091479, 'reg_alpha': 0.26395451495240163, 'reg_lambda': 0.6326785292546009}
2025-06-17 11:11:20,745 - Best CV F1 (Optuna): 0.6293
2025-06-17 11:12:10,199 - XGBoost | F1: 0.6341  AP: 0.7513  ROC‑AUC: 0.9525
# reran without  'advection_zeta', 'vpd', trying with 50 trials
2025-06-17 11:53:49,993 - Best params (Optuna): {'C': 1.1001435768696026}
2025-06-17 11:53:49,993 - Best CV F1 (Optuna): 0.3292
2025-06-17 11:53:50,020 - Logistic Regression (Single) | F1: 0.4675  AP: 0.5791  ROC‑AUC: 0.8209
2025-06-17 11:56:00,514 - Best params (Optuna): {'C': 0.013827908785043004}
2025-06-17 11:56:00,515 - Best CV F1 (Optuna): 0.3772
2025-06-17 11:56:00,587 - Logistic Regression | F1: 0.4557  AP: 0.5677  ROC‑AUC: 0.8337
2025-06-17 11:57:56,805 - Best params (Optuna): {'n_estimators': 76, 'max_depth': 15, 'min_samples_split': 4, 'min_samples_leaf': 1, 'max_features': 4}
2025-06-17 11:57:56,806 - Best CV F1 (Optuna): 0.5508
2025-06-17 11:57:57,506 - Random Forest | F1: 0.6000  AP: 0.6998  ROC‑AUC: 0.9184
2025-06-17 12:05:01,357 - Best params (Optuna): {'max_depth': 6, 'learning_rate': 0.14193067222871958, 'n_estimators': 124, 'subsample': 0.9543058610466106, 'colsample_bytree': 0.9075891908293054, 'scale_pos_weight': 12.231665807598183, 'reg_alpha': 0.47766709681383646, 'reg_lambda': 1.208297074828816}
2025-06-17 12:05:01,357 - Best CV F1 (Optuna): 0.6229
2025-06-17 12:05:05,555 - XGBoost | F1: 0.6383  AP: 0.6746  ROC‑AUC: 0.9223
# reran with those variables included, with 50 trials and 10 CV folds
2025-06-17 14:15:00,191 - Best params (Optuna): {'C': 0.008951163414363451}
2025-06-17 14:15:00,191 - Best CV F1 (Optuna): 0.3202
2025-06-17 14:15:00,206 - Logistic Regression (Single) | F1: 0.4675  AP: 0.5791  ROC‑AUC: 0.8209
2025-06-17 14:19:23,830 - Best params (Optuna): {'C': 6.50258467660368}
2025-06-17 14:19:23,830 - Best CV F1 (Optuna): 0.4760
2025-06-17 14:19:23,881 - Logistic Regression | F1: 0.5556  AP: 0.6334  ROC‑AUC: 0.8679
2025-06-17 14:23:02,183 - Best params (Optuna): {'n_estimators': 52, 'max_depth': 15, 'min_samples_split': 16, 'min_samples_leaf': 2, 'max_features': 4}
2025-06-17 14:23:02,183 - Best CV F1 (Optuna): 0.5184
2025-06-17 14:23:02,654 - Random Forest | F1: 0.5778  AP: 0.7097  ROC‑AUC: 0.9203
2025-06-17 14:33:48,531 - Best params (Optuna): {'max_depth': 7, 'learning_rate': 0.15488806093226476, 'n_estimators': 133, 'subsample': 0.9396486419833812, 'colsample_bytree': 0.9117807746322314, 'scale_pos_weight': 9.78834814054262, 'reg_alpha': 0.40023186707697095, 'reg_lambda': 1.236813039014861}
2025-06-17 14:33:48,532 - Best CV F1 (Optuna): 0.6312
2025-06-17 14:33:59,732 - XGBoost | F1: 0.7273  AP: 0.7742  ROC‑AUC: 0.9472

# Reran after changing definition of events slightly
2025-06-19 19:47:14,864 - Best params (Optuna): {'C': 22.962428338015997}
2025-06-19 19:47:14,864 - Best CV F1 (Optuna): 0.1448
2025-06-19 19:47:14,877 - Logistic Regression (Single) | F1: 0.4267  AP: 0.4980  ROC‑AUC: 0.8018
2025-06-19 19:48:03,473 - Best params (Optuna): {'C': 94.51706399732633}
2025-06-19 19:48:03,473 - Best CV F1 (Optuna): 0.2163
2025-06-19 19:48:03,520 - Logistic Regression | F1: 0.5070  AP: 0.5005  ROC‑AUC: 0.8485
2025-06-19 19:51:23,785 - Best params (Optuna): {'n_estimators': 100, 'max_depth': 10, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 4}
2025-06-19 19:51:23,785 - Best CV F1 (Optuna): 0.4793
2025-06-19 19:51:24,331 - Random Forest | F1: 0.5556  AP: 0.7058  ROC‑AUC: 0.9352
2025-06-19 19:53:04,667 - Best params (Optuna): {'max_depth': 5, 'learning_rate': 0.15435641874356618, 'n_estimators': 140, 'subsample': 0.8356092432491243, 'colsample_bytree': 0.8114250041209159, 'scale_pos_weight': 11.966932802927328, 'reg_alpha': 0.36166387456212334, 'reg_lambda': 1.2207401528713464}
2025-06-19 19:53:04,667 - Best CV F1 (Optuna): 0.5642
2025-06-19 19:53:04,898 - XGBoost | F1: 0.5263  AP: 0.7032  ROC‑AUC: 0.9398

# Reran again after changing the hyperparameter ranges
2025-06-19 20:54:48,637 - Best params (Optuna): {'C': 14.067122382204692}
2025-06-19 20:54:48,637 - Best CV F1 (Optuna): 0.1448
2025-06-19 20:54:48,650 - Logistic Regression (Single) | F1: 0.4267  AP: 0.4980  ROC‑AUC: 0.8018
2025-06-19 20:55:33,323 - Best params (Optuna): {'C': 0.926630014340196}
2025-06-19 20:55:33,323 - Best CV F1 (Optuna): 0.2163
2025-06-19 20:55:33,389 - Logistic Regression | F1: 0.5070  AP: 0.4998  ROC‑AUC: 0.8480
2025-06-19 20:58:08,554 - Best params (Optuna): {'n_estimators': 53, 'max_depth': 10, 'min_samples_split': 8, 'min_samples_leaf': 2, 'max_features': 4}
2025-06-19 20:58:08,554 - Best CV F1 (Optuna): 0.4625
2025-06-19 20:58:08,877 - Random Forest | F1: 0.5641  AP: 0.6631  ROC‑AUC: 0.9136
2025-06-19 20:59:46,069 - Best params (Optuna): {'max_depth': 11, 'learning_rate': 0.07027342796968986, 'n_estimators': 75, 'subsample': 0.8191970497162137, 'colsample_bytree': 0.7001733276451121, 'scale_pos_weight': 14.105286648698366, 'reg_alpha': 0.09940375286527614, 'reg_lambda': 0.7589301539901729}
2025-06-19 20:59:46,069 - Best CV F1 (Optuna): 0.5668
2025-06-19 20:59:46,394 - XGBoost | F1: 0.5946  AP: 0.7084  ROC‑AUC: 0.9438

# Reran again after changing the hyperparameter ranges

2025-06-19 21:02:07,307 - Best params (Optuna): {'C': 19.500224436550734}
2025-06-19 21:02:07,307 - Best CV F1 (Optuna): 0.1375
2025-06-19 21:02:07,320 - Logistic Regression (Single) | F1: 0.4000  AP: 0.4548  ROC‑AUC: 0.7910
2025-06-19 21:02:52,001 - Best params (Optuna): {'C': 0.013963172693465278}
2025-06-19 21:02:52,001 - Best CV F1 (Optuna): 0.1746
2025-06-19 21:02:52,062 - Logistic Regression | F1: 0.4675  AP: 0.4736  ROC‑AUC: 0.8288
2025-06-19 21:06:07,317 - Best params (Optuna): {'n_estimators': 191, 'max_depth': 11, 'min_samples_split': 3, 'min_samples_leaf': 1, 'max_features': 'log2'}
2025-06-19 21:06:07,317 - Best CV F1 (Optuna): 0.4538
2025-06-19 21:06:08,078 - Random Forest | F1: 0.5556  AP: 0.6733  ROC‑AUC: 0.9071
2025-06-19 21:07:55,779 - Best params (Optuna): {'max_depth': 12, 'learning_rate': 0.07088339669090907, 'n_estimators': 111, 'subsample': 0.6597895992181577, 'colsample_bytree': 0.8875605695391414, 'scale_pos_weight': 8.323472981779918, 'reg_alpha': 0.18700865049365667, 'reg_lambda': 1.0875154704768037}
2025-06-19 21:07:55,779 - Best CV F1 (Optuna): 0.5522
2025-06-19 21:07:56,072 - XGBoost | F1: 0.5789  AP: 0.7515  ROC‑AUC: 0.9452

# reran by fixing dropna
2025-06-19 21:23:34,902 - Best params (Optuna): {'C': 5.737708602417935}
2025-06-19 21:23:34,903 - Best CV F1 (Optuna): 0.1256
2025-06-19 21:23:34,916 - Logistic Regression (Single) | F1: 0.1818  AP: 0.2240  ROC‑AUC: 0.7874
2025-06-19 21:24:21,805 - Best params (Optuna): {'C': 0.625829969698708}
2025-06-19 21:24:21,806 - Best CV F1 (Optuna): 0.2075
2025-06-19 21:24:21,860 - Logistic Regression | F1: 0.2059  AP: 0.2366  ROC‑AUC: 0.7850
2025-06-19 21:27:00,983 - Best params (Optuna): {'n_estimators': 118, 'max_depth': 13, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': 'sqrt'}
2025-06-19 21:27:00,983 - Best CV F1 (Optuna): 0.4460
2025-06-19 21:27:01,488 - Random Forest | F1: 0.4167  AP: 0.4494  ROC‑AUC: 0.9333
2025-06-19 21:28:39,945 - Best params (Optuna): {'max_depth': 6, 'learning_rate': 0.017707073344671025, 'n_estimators': 111, 'subsample': 0.8019574678898702, 'colsample_bytree': 0.8019870446285126, 'scale_pos_weight': 7.897888644448871, 'reg_alpha': 0.2779346223387953, 'reg_lambda': 0.9895180669983519}
2025-06-19 21:28:39,945 - Best CV F1 (Optuna): 0.5448
2025-06-19 21:28:40,291 - XGBoost | F1: 0.3750  AP: 0.4599  ROC‑AUC: 0.9447

# That did not work..., lets try 15x15

2025-06-19 21:34:35,220 - Best params (Optuna): {'C': 0.030086671347585026}
2025-06-19 21:34:35,221 - Best CV F1 (Optuna): 0.1277
2025-06-19 21:34:35,239 - Logistic Regression (Single) | F1: 0.1867  AP: 0.2435  ROC‑AUC: 0.8090
2025-06-19 21:35:23,855 - Best params (Optuna): {'C': 0.3563374589736682}
2025-06-19 21:35:23,855 - Best CV F1 (Optuna): 0.2406
2025-06-19 21:35:23,894 - Logistic Regression | F1: 0.2090  AP: 0.2466  ROC‑AUC: 0.8084
2025-06-19 21:37:59,040 - Best params (Optuna): {'n_estimators': 56, 'max_depth': 13, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt'}
2025-06-19 21:37:59,041 - Best CV F1 (Optuna): 0.4674
2025-06-19 21:37:59,362 - Random Forest | F1: 0.3333  AP: 0.5223  ROC‑AUC: 0.9435
2025-06-19 21:39:59,246 - Best params (Optuna): {'max_depth': 11, 'learning_rate': 0.10252837709558572, 'n_estimators': 163, 'subsample': 0.5685911052213295, 'colsample_bytree': 0.8344863050740754, 'scale_pos_weight': 9.239738215801157, 'reg_alpha': 0.17057279293854682, 'reg_lambda': 0.9137051291572779}
2025-06-19 21:39:59,247 - Best CV F1 (Optuna): 0.5832
2025-06-19 21:40:15,592 - XGBoost | F1: 0.5217  AP: 0.6366  ROC‑AUC: 0.9586

# trying a different hyperparameter range

2025-06-19 22:51:59,089 - Best params (Optuna): {'C': 0.8663153036519753}
2025-06-19 22:51:59,089 - Best CV F1 (Optuna): 0.1449
2025-06-19 22:51:59,103 - Logistic Regression (Single) | F1: 0.3514  AP: 0.5058  ROC‑AUC: 0.8646
2025-06-19 22:52:46,300 - Best params (Optuna): {'C': 0.6461365596798837}
2025-06-19 22:52:46,300 - Best CV F1 (Optuna): 0.1758
2025-06-19 22:52:46,344 - Logistic Regression | F1: 0.3692  AP: 0.4978  ROC‑AUC: 0.8858
2025-06-19 22:56:15,950 - Best params (Optuna): {'n_estimators': 148, 'max_depth': 13, 'min_samples_split': 4, 'min_samples_leaf': 2, 'max_features': 'log2'}
2025-06-19 22:56:15,951 - Best CV F1 (Optuna): 0.4451
2025-06-19 22:56:16,594 - Random Forest | F1: 0.5600  AP: 0.7490  ROC‑AUC: 0.9516
2025-06-19 22:57:48,368 - Best params (Optuna): {'max_depth': 12, 'learning_rate': 0.2045610562843104, 'n_estimators': 98, 'subsample': 0.9718589179960736, 'colsample_bytree': 0.9137495425111157, 'scale_pos_weight': 13.471729675658745, 'reg_alpha': 0.32246355745539335, 'reg_lambda': 1.7483518711856423}
2025-06-19 22:57:48,368 - Best CV F1 (Optuna): 0.5746
2025-06-19 22:57:48,674 - XGBoost | F1: 0.6000  AP: 0.6518  ROC‑AUC: 0.9267

# redefined the events again.
2025-06-19 23:07:26,309 - Best params (Optuna): {'C': 1.029155332662048}
2025-06-19 23:07:26,309 - Best CV F1 (Optuna): 0.2100
2025-06-19 23:07:26,322 - Logistic Regression (Single) | F1: 0.3421  AP: 0.4698  ROC‑AUC: 0.8102
2025-06-19 23:08:13,502 - Best params (Optuna): {'C': 0.08125120473334911}
2025-06-19 23:08:13,502 - Best CV F1 (Optuna): 0.2466
2025-06-19 23:08:13,712 - Logistic Regression | F1: 0.4058  AP: 0.4326  ROC‑AUC: 0.8096
2025-06-19 23:11:48,975 - Best params (Optuna): {'n_estimators': 150, 'max_depth': 10, 'min_samples_split': 4, 'min_samples_leaf': 1, 'max_features': 'sqrt'}
2025-06-19 23:11:48,976 - Best CV F1 (Optuna): 0.4609
2025-06-19 23:11:49,634 - Random Forest | F1: 0.4828  AP: 0.6560  ROC‑AUC: 0.9120
2025-06-19 23:13:29,000 - Best params (Optuna): {'max_depth': 10, 'learning_rate': 0.17163605645478805, 'n_estimators': 149, 'subsample': 0.5618689015075469, 'colsample_bytree': 0.7713095614553435, 'scale_pos_weight': 7.406915641996774, 'reg_alpha': 0.35893420724576197, 'reg_lambda': 1.0579685711121463}
2025-06-19 23:13:29,000 - Best CV F1 (Optuna): 0.5519
2025-06-19 23:13:29,259 - XGBoost | F1: 0.5714  AP: 0.6662  ROC‑AUC: 0.9428
2025-06-19 23:47:13,390 - Best Optuna params: {'C': 31.767555997043058}
2025-06-19 23:47:51,690 - Best Optuna params: {'C': 4.210700354547375}
2025-06-19 23:55:05,004 - Best Optuna params: {'C': 3.019159825581464}
2025-06-19 23:55:05,036 - Logistic Regression (Single) | F1=0.1905  AP=0.6339  ROC-AUC=0.8338
2025-06-19 23:58:34,135 - Best Optuna params: {'n_estimators': 300, 'max_depth': 9, 'min_samples_split': 5, 'min_samples_leaf': 5, 'max_features': 0.35728397008281576, 'class_weight': 'balanced'}
2025-06-19 23:58:35,321 - Random Forest | F1=0.5714  AP=0.6846  ROC-AUC=0.9113
2025-06-20 00:19:00,320 - Best Optuna params: {'C': 95.2857991980176}
2025-06-20 00:19:00,366 - Logistic Regression | F1=0.2727  AP=0.6269  ROC-AUC=0.8172
2025-06-20 00:45:05,102 - Best Optuna params: {'n_estimators': 400, 'max_depth': 8, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': 0.34483478758162694, 'class_weight': 'balanced'}
2025-06-20 00:45:06,604 - Random Forest | F1=0.5882  AP=0.6728  ROC-AUC=0.9113
2025-06-20 01:02:53,982 - Best Optuna params: {'max_depth': 10, 'min_child_weight': 1, 'gamma': 2.4607581153550333, 'subsample': 0.7755692636769427, 'colsample_bytree': 0.8737505101110606, 'learning_rate': 0.014162512181891993, 'n_estimators': 600, 'reg_alpha': 0.1321410542658953, 'reg_lambda': 4.98550950467873, 'scale_pos_weight': 9.235812247690973}
2025-06-20 01:02:54,828 - XGBoost | F1=0.6000  AP=0.7389  ROC-AUC=0.9305

2025-06-20 01:31:35,873 - Best Optuna params: {'C': 63.53891599684943}
2025-06-20 01:31:35,886 - Logistic Regression (Single) | F1=0.1905  AP=0.6339  ROC-AUC=0.8338
2025-06-20 01:32:05,795 - Best Optuna params: {'C': 42.08110089346684}
2025-06-20 01:32:05,845 - Logistic Regression | F1=0.2727  AP=0.6269  ROC-AUC=0.8172
2025-06-20 02:00:14,617 - Best Optuna params: {'n_estimators': 100, 'max_depth': 7, 'min_samples_split': 5, 'min_samples_leaf': 5, 'max_features': 0.3897540688416532, 'class_weight': 'balanced'}
2025-06-20 02:00:14,995 - Random Forest | F1=0.5946  AP=0.6834  ROC-AUC=0.9094
2025-06-20 02:12:56,135 - Best Optuna params: {'max_depth': 8, 'min_child_weight': 1, 'gamma': 3.0555075932387212, 'subsample': 0.8763307224220045, 'colsample_bytree': 0.6967654031970936, 'learning_rate': 0.009625662987546815, 'n_estimators': 950, 'reg_alpha': 0.9427819345045947, 'reg_lambda': 1.5668975651702008, 'scale_pos_weight': 8.255790016159176}
2025-06-20 02:12:56,994 - XGBoost | F1=0.5641  AP=0.7380  ROC-AUC=0.9356

2025-06-20 06:59:26,421 - Best Optuna params: {'C': 49.92959017591419}
2025-06-20 06:59:26,437 - Logistic Regression (Single) | F1=0.2609  AP=0.5221  ROC-AUC=0.7839
2025-06-20 06:59:52,975 - Best Optuna params: {'C': 3.072447539365925}
2025-06-20 06:59:53,008 - Logistic Regression | F1=0.4000  AP=0.6000  ROC-AUC=0.8075
2025-06-20 07:25:48,282 - Best Optuna params: {'n_estimators': 200, 'max_depth': 10, 'min_samples_split': 3, 'min_samples_leaf': 3, 'max_features': 0.31855646218147055, 'class_weight': 'balanced'}
2025-06-20 07:25:48,922 - Random Forest | F1=0.4706  AP=0.5386  ROC-AUC=0.9193
2025-06-20 07:36:27,728 - Best Optuna params: {'max_depth': 9, 'min_child_weight': 4, 'gamma': 2.7794002515492937, 'subsample': 0.8011608169666563, 'colsample_bytree': 0.8736130733247971, 'learning_rate': 0.19141123035138646, 'n_estimators': 1200, 'reg_alpha': 0.31813808653558023, 'reg_lambda': 4.487299161157593, 'scale_pos_weight': 8.72932722555466}
2025-06-20 07:36:28,604 - XGBoost | F1=0.5455  AP=0.6495  ROC-AUC=0.9330

2025-06-20 11:37:32,512 - Best Optuna params: {'C': 0.35093782851113586}
2025-06-20 11:37:32,528 - Logistic Regression (Single) | F1=0.2143  AP=0.4398  ROC-AUC=0.8327
2025-06-20 11:37:46,226 - Best Optuna params: {'C': 22.645278049492966}
2025-06-20 11:37:46,274 - Logistic Regression | F1=0.3871  AP=0.5406  ROC-AUC=0.8752
2025-06-20 11:41:28,893 - Best Optuna params: {'C': 0.3447939814160853}
2025-06-20 11:41:28,913 - Logistic Regression (Single) | F1=0.2143  AP=0.4398  ROC-AUC=0.8327
2025-06-20 11:41:42,213 - Best Optuna params: {'C': 33.41425877438359}
2025-06-20 11:41:42,260 - Logistic Regression | F1=0.3871  AP=0.5406  ROC-AUC=0.8752
2025-06-20 11:56:17,575 - Best Optuna params: {'n_estimators': 256, 'max_depth': 15, 'min_samples_split': 8, 'min_samples_leaf': 4, 'max_features': 0.7197599949490442, 'class_weight': 'balanced'}
2025-06-20 11:56:19,245 - Random Forest | F1=0.5490  AP=0.5705  ROC-AUC=0.9136
2025-06-20 12:00:06,963 - Best Optuna params: {'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.06997215091488018, 'subsample': 0.8264928612841727, 'colsample_bytree': 0.6849915800684014, 'learning_rate': 0.010003529657579677, 'n_estimators': 534, 'reg_alpha': 0.48745131803012165, 'reg_lambda': 6.852884549682866, 'scale_pos_weight': 7.683985926121845}
2025-06-20 12:00:07,923 - XGBoost | F1=0.5902  AP=0.6041  ROC-AUC=0.9141
2025-06-20 12:07:26,094 - Best Optuna params: {'C': 1.9796657699659865}
2025-06-20 12:07:26,108 - Logistic Regression (Single) | F1=0.4828  AP=0.6436  ROC-AUC=0.8617
2025-06-20 12:07:28,802 - Best Optuna params: {'C': 3.2136887870400033}
2025-06-20 12:07:28,849 - Logistic Regression | F1=0.6061  AP=0.7069  ROC-AUC=0.8996
2025-06-20 12:09:24,962 - Best Optuna params: {'n_estimators': 81, 'max_depth': 14, 'min_samples_split': 2, 'min_samples_leaf': 3, 'max_features': 0.300007509676075}
2025-06-20 12:09:25,221 - Random Forest | F1=0.6809  AP=0.7426  ROC-AUC=0.9307
2025-06-20 12:10:01,660 - Best Optuna params: {'max_depth': 13, 'min_child_weight': 7, 'gamma': 3.4127291231712102, 'subsample': 0.8751930996320658, 'colsample_bytree': 0.6739421254999568, 'learning_rate': 0.1540985630302549, 'n_estimators': 393, 'reg_alpha': 0.6019497720485488, 'reg_lambda': 2.795259764974741, 'scale_pos_weight': 8.127228156237406}
2025-06-20 12:10:01,860 - XGBoost | F1=0.6154  AP=0.6597  ROC-AUC=0.9167


2025-06-20 12:16:34,187 - Best Optuna params: {'C': 4.44203743952838}
2025-06-20 12:16:34,200 - Logistic Regression (Single) | F1=0.4828  AP=0.6436  ROC-AUC=0.8617
2025-06-20 12:16:37,087 - Best Optuna params: {'C': 6.891800926947306}
2025-06-20 12:16:37,143 - Logistic Regression | F1=0.6061  AP=0.7072  ROC-AUC=0.8998
2025-06-20 12:22:04,803 - Best Optuna params: {'C': 2.139835110928122}
2025-06-20 12:22:04,817 - Logistic Regression (Single) | F1=0.4828  AP=0.6436  ROC-AUC=0.8617
2025-06-20 12:22:07,681 - Best Optuna params: {'C': 11.29129051576973}
2025-06-20 12:22:07,771 - Logistic Regression | F1=0.6061  AP=0.7072  ROC-AUC=0.8998
2025-06-20 12:24:00,772 - Best Optuna params: {'n_estimators': 300, 'max_depth': 12, 'min_samples_split': 6, 'min_samples_leaf': 4, 'max_features': 0.716568902643977, 'bootstrap': True}
2025-06-20 12:24:02,636 - Random Forest | F1=0.6522  AP=0.7176  ROC-AUC=0.9341
2025-06-20 12:25:01,540 - Best Optuna params: {'max_depth': 10, 'min_child_weight': 4, 'gamma': 3.0447113364303284, 'subsample': 0.747101307200784, 'colsample_bytree': 0.6845531739228085, 'learning_rate': 0.07344665714886187, 'n_estimators': 350, 'reg_alpha': 0.6209611513014087, 'reg_lambda': 3.9028547717090785, 'scale_pos_weight': 7.486145385764672}
2025-06-20 12:25:01,805 - XGBoost | F1=0.5818  AP=0.7197  ROC-AUC=0.9285


2025-06-20 12:27:54,556 - Best Optuna params: {'C': 2.7494508472381987}
2025-06-20 12:27:54,573 - Logistic Regression (Single) | F1=0.4828  AP=0.6436  ROC-AUC=0.8617
2025-06-20 12:28:09,670 - Best Optuna params: {'C': 2.320653830104518}
2025-06-20 12:28:09,730 - Logistic Regression | F1=0.6061  AP=0.7069  ROC-AUC=0.8996
2025-06-20 12:34:44,633 - Best Optuna params: {'n_estimators': 100, 'max_depth': 15, 'min_samples_split': 3, 'min_samples_leaf': 4, 'max_features': 0.4158385221862855, 'bootstrap': False}
2025-06-20 12:34:45,189 - Random Forest | F1=0.5600  AP=0.7138  ROC-AUC=0.9343
2025-06-20 12:38:34,390 - Best Optuna params: {'max_depth': 8, 'min_child_weight': 8, 'gamma': 1.5048379185046508, 'subsample': 0.8658814573853222, 'colsample_bytree': 0.8036300581904748, 'learning_rate': 0.14957474574900728, 'n_estimators': 250, 'reg_alpha': 0.5871152386241499, 'reg_lambda': 4.330917123060379, 'scale_pos_weight': 7.493706932953342}
2025-06-20 12:38:34,580 - XGBoost | F1=0.6667  AP=0.6758  ROC-AUC=0.9237
2025-06-20 12:56:19,349 - Best Optuna params: {'C': 33.836954276725265}
2025-06-20 12:56:19,364 - Logistic Regression (Single) | F1=0.4828  AP=0.6436  ROC-AUC=0.8617
2025-06-20 12:56:32,524 - Best Optuna params: {'C': 3.1540642897026827}
2025-06-20 12:56:32,577 - Logistic Regression | F1=0.6061  AP=0.7069  ROC-AUC=0.8996
2025-06-20 13:01:38,192 - Best Optuna params: {'n_estimators': 120, 'max_depth': 16, 'min_samples_split': 3, 'min_samples_leaf': 3, 'max_features': 0.39828428561321877, 'bootstrap': True}
2025-06-20 13:01:38,682 - Random Forest | F1=0.6364  AP=0.7284  ROC-AUC=0.9349
2025-06-20 13:06:51,349 - Best Optuna params: {'max_depth': 11, 'min_child_weight': 6, 'gamma': 1.1946930109116207, 'subsample': 0.8678730119667987, 'colsample_bytree': 0.8043998039621196, 'learning_rate': 0.06232098551962181, 'n_estimators': 550, 'reg_alpha': 0.3216157399886529, 'reg_lambda': 1.4717156857193374, 'scale_pos_weight': 7.339443766438482}
2025-06-20 13:06:51,800 - XGBoost | F1=0.6250  AP=0.7025  ROC-AUC=0.9329
2025-06-20 13:16:57,152 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:16:57,163 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:17:14,560 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:17:14,568 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:17:25,484 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:17:25,494 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:17:29,379 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:17:29,388 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:17:33,587 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:17:33,593 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:18:52,098 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:18:52,105 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:19:00,240 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:19:00,248 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:19:27,225 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:19:27,235 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:19:30,784 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:19:30,799 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:25:05,243 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:25:05,250 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:25:09,366 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:25:09,375 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:25:16,069 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:25:16,078 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:25:18,819 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:25:18,829 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:26:10,013 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:26:10,021 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:27:58,704 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:27:58,712 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:28:21,908 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:28:21,931 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:32:35,844 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:32:35,854 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:33:32,133 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:33:32,141 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:36:42,012 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:36:42,021 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:37:00,224 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:37:00,232 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:41,853 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:41,861 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:45,368 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:45,377 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:48,333 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:48,340 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:51,137 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:51,145 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:55,203 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:55,212 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:59,000 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 13:45:59,007 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:02,162 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:02,170 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:05,928 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:05,937 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:06,882 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:06,892 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:15,208 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:15,216 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:26,905 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:19:26,911 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:26,655 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:26,662 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:34,618 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:34,625 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:41,266 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:41,274 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:50,491 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:50,500 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:51,977 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:51,986 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:58,495 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:20:58,501 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:22:58,674 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:22:58,682 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:24:33,032 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:24:33,039 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:24:33,118 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:24:33,124 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:24:48,575 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:24:48,583 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:24:48,649 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:24:48,654 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:18,075 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:18,082 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:18,157 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:18,163 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:31,229 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:31,237 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:31,315 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:31,321 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:38,718 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:38,725 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:38,800 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:38,806 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:51,908 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:51,915 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:51,992 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:25:51,998 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:04,785 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:04,792 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:04,866 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:04,873 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:08,928 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:08,936 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:09,013 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:09,020 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:17,315 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:17,322 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:17,396 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:17,402 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:24,017 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:24,024 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:24,103 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:24,110 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:37,287 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:37,295 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:37,369 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:37,375 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:59,883 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:59,891 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:59,968 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:26:59,974 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:27:26,214 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:27:26,221 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:27:26,297 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:27:26,304 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:02,100 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:02,107 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:02,181 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:02,187 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:17,944 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:17,952 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:18,029 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:18,036 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:21,784 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:21,792 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:21,873 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:28:21,880 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:29:17,629 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:29:17,637 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:29:17,713 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:29:17,719 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:29:37,061 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:29:37,069 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:29:37,147 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:29:37,153 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:31:55,307 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:31:55,318 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:31:55,410 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-06-20 15:31:55,417 - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
